Description: "Lambda Role for accessing EKS and MSK"
Resources:
  LambdaProvisioningRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonEKSClusterPolicy'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonEKSServicePolicy'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonEKSWorkerNodePolicy'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonMSKReadOnlyAccess'
      Policies:
        - PolicyName: EKSStackPolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:*
                  - eks:*
                  - lambda:InvokeFunction
                Resource: "*"
              - Effect: Allow
                Action: s3:GetObject
                Resource: 
                  - "*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - ec2:CreateNetworkInterface
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DeleteNetworkInterface
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - lambda:AddPermission
                  - lambda:RemovePermission
                Resource:  "*"
              - Effect: Allow
                Action:
                  - events:PutRule
                  - events:DeleteRule
                  - events:PutTargets
                  - events:RemoveTargets
                Resource:  "*"

Outputs:
  LambdaProvisioningRoleArn:
    Value: !GetAtt LambdaProvisioningRole.Arn

